{"version":3,"sources":["../../src/utils/decorators.js"],"names":["cb","test","params","target","key","decorator","oldFn","value","apply","arguments","Error"],"mappings":"AAAA;AACA;;;;;;;;;QAKgBA,E,GAAAA,E;QAcAC,I,GAAAA,I;AAdT,SAASD,EAAT,CAAaE,MAAb,EAAqB;AAC1B,SAAO,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,SAAvB,EAAkC;AACvC,QAAIC,QAAQD,UAAUE,KAAtB;AACA;AACAF,cAAUE,KAAV,GAAkB,YAAY;AAC5B;AACAD,YAAME,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACA;AACA,aAAOP,UAAU,IAAjB;AACD,KALD;AAMA,WAAOG,SAAP;AACD,GAVD;AAWD;;AAEM,SAASJ,IAAT,GAAiB;AACtB,SAAO,UAAUE,MAAV,EAAkBC,GAAlB,EAAuBC,SAAvB,EAAkC;AACvC,UAAM,IAAIK,KAAJ,CAAU,gBAAV,CAAN;AACD,GAFD;AAGD","file":"decorators.js","sourcesContent":["'use strict'\r\n/**\r\n * 更改函数返回值\r\n * @param {any} params 指定返回值\r\n * @return {any|this} 返回指定值，默认返回当前对象\r\n **/\r\nexport function cb (params) {\r\n  return function (target, key, decorator) {\r\n    let oldFn = decorator.value\r\n    // 重写函数体\r\n    decorator.value = function () {\r\n      // 运行原来的函数\r\n      oldFn.apply(this, arguments)\r\n      // 返回指定值，默认返回当前对象\r\n      return params || this\r\n    }\r\n    return decorator\r\n  }\r\n}\r\n\r\nexport function test () {\r\n  return function (target, key, decorator) {\r\n    throw new Error('this is a test')\r\n  }\r\n}\r\n"]}